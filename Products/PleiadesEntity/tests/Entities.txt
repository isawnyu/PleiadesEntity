
Tests of Places
===============
    
    >>> folder = self.folder
    >>> places = folder['places']

Add place
    
    >>> nameAttested = u'\u039d\u03b9\u03bd\u1f79\u03b7'.encode('utf-8')
    >>> pid1 = places.invokeFactory('Place', '1', title='Ninoe', modernLocation=nameAttested, placeType=['settlement'])
    >>> p1 = places[pid1]
    >>> nid = p1.invokeFactory('Name', 'ninoe', nameAttested=nameAttested, nameLanguage='grc', nameType='geographic', accuracy='accurate', completeness='complete')
    >>> attestations = p1[nid].Schema()['attestations']
    >>> attestations.resize(1)
    >>> p1[nid].update(attestations=[dict(confidence='certain', timePeriod='roman')])

Test computed attributes
    
    >>> p1.Title()
    'Ninoe'
    >>> p1[nid].getAttestations()
    [{'timePeriod': 'roman', 'confidence': 'certain'}]
    >>> p1.getTimePeriods()
    ['roman']
    >>> p1[nid].getTimePeriods()
    ['roman']
    >>> p1.getFeatureType()
    ['settlement']
    >>> p1.SearchableText()
    '1  Ninoe  Pleiades \xce\x9d\xce\xb9\xce\xbd\xe1\xbd\xb9\xce\xb7 '

Test geometry accessors and mutator

    >>> lid = p1.invokeFactory('Location', 'x', title='Point 1', geometry='Point:[-86.4808333333333, 34.769722222222]')
    >>> loc = p1[lid]
    >>> loc.getGeometry()
    '{\n  "type": "Point",\n  "coordinates": [\n    -86.4808333333333,\n    34.769722222222\n  ]\n}'
    >>> loc.getGeometryJSON()
    '{"type": "Point", "coordinates": [-86.4808333333333, 34.769722222222]}'
    >>> loc.setGeometry('{"type": "Point", "coordinates": [0.0, 0.0]}')
    >>> loc.getGeometryWKT()
    'POINT (0.0000000000000000 0.0000000000000000)'
    >>> loc.setGeometry('POINT (1.0 1.0)')
    >>> loc.getGeometryJSON()
    '{"type": "Point", "coordinates": [1.0, 1.0]}'
    >>> loc.setGeometry('Point:(2.0,2.0]')
    >>> loc.getGeometryJSON()
    '{"type": "Point", "coordinates": [2.0, 2.0]}'

