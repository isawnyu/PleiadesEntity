
Tests of relationships among Feature and Place
======================================================
    
    >>> folder = self.folder
    >>> features = folder['features']
    >>> places = folder['places']

Add feature
    
    >>> fid = features.invokeFactory('Feature', None, title='Ninoe', featureType='settlement')
    >>> f = features[fid]
    >>> nameAttested = u'\u039d\u03b9\u03bd\u1f79\u03b7'.encode('utf-8')
    >>> nid = f.invokeFactory('Name', 'ninoe', nameAttested=nameAttested, nameLanguage='grc', nameType='geographic', accuracy='accurate', completeness='complete')
    >>> attestations = f[nid].Schema()['attestations']
    >>> f[nid].update(attestations=[dict(confidence='certain', timePeriod='roman')])
    >>> lid = f.invokeFactory('Location', 'location', title='Point 1', geometry='Point:[-86.4808333333333, 34.769722222222]')

Test computed attributes
    
    >>> f.Title()
    'Ninoe'
    >>> f[nid].getAttestations()
    [{'timePeriod': 'roman', 'confidence': 'certain'}]

Add place
    
    >>> pid = places.invokeFactory('Place', None, title='Ninoe')
    >>> p = places[pid]
    >>> nid = p.invokeFactory('Name', 'ninoe', nameAttested=nameAttested, nameLanguage='grc', nameType='geographic', accuracy='accurate', completeness='complete')
    >>> attestations = p[nid].Schema()['attestations']
    >>> p[nid].update(attestations=[dict(confidence='certain', timePeriod='roman')])

And references
    
    >>> _ = f.addReference(p, 'feature_place')

Test computed attributes
    
    >>> p.Title()
    'Ninoe'
    >>> p[nid].getAttestations()
    [{'timePeriod': 'roman', 'confidence': 'certain'}]
    >>> list(p.getFeatures())
    [<Feature at /plone/Members/test_user_1_/features/...>]
    >>> p.getTimePeriods()
    ['roman']
    >>> p[nid].getTimePeriods()
    ['roman']
    >>> p.getFeatureType()
    ['settlement']

Test the geo adapters
---------------------
    
    >>> from zgeo.geographer.interfaces import IGeoreferenced
    
    >>> g = IGeoreferenced(f)
    >>> gi = g.__geo_interface__
    >>> gi['type']
    'Feature'
    >>> g.type
    'Point'
    >>> g.coordinates
    [-86.480833333333294, 34.769722222222001]
    
    >>> g = IGeoreferenced(p)
    >>> gi = g.__geo_interface__
    >>> gi['type']
    'Feature'
    >>> g.type
    'Point'
    >>> g.coordinates
    [-86.480833333333294, 34.769722222222001]
