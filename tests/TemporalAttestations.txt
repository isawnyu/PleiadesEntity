Boundary conditions for TemporalAttestations
=========================

Check catalogs
--------------

    >>> uc = self.portal.uid_catalog
    >>> rc = self.portal.reference_catalog

Setup
-----

    Enable types

    >>> lpf = self.portal.portal_types['Large Plone Folder']
    >>> lpf_allow = lpf.global_allow
    >>> lpf.global_allow = True

    >>> n = self.portal.portal_types['Name']
    >>> n_allow = n.global_allow
    >>> n.global_allow = True

    Alias the test folder

    >>> folder = self.folder

    Containers

    >>> _ = folder.invokeFactory('Large Plone Folder', id='names')
    >>> _ = folder.invokeFactory('LocationContainer', id='locations')
    >>> _ = folder.invokeFactory('PlaceContainer', id='places')
    >>> folder.places._v_nextid = BA_ID_MAX


Utility tests
-------------

    >>> format_listofstrings([])
    u''
    >>> format_listofstrings(['x'])
    u'x'
    >>> format_listofstrings(['x', 'y'])
    u'x and y'
    >>> format_listofstrings(['x', 'y', 'z'])
    u'x, y and z'
    
    >>> purifyText(u'aaa') == u'aaa'
    True
    >>> purifyText(u'abab') == u'abab'
    True
    >>> purifyText(u'Magie\U000000A01950,\U000000A0989') == u'Magie 1950, 989'
    True
   
Load one entity
---------------

    >>> r = load_place(folder, "%s/timetwister.xml" % TEST_DATA)
    >>> int(r['place_id']) >= BA_ID_MAX
    True
    >>> r['name_ids']
    ['time-twister', 'tome-twirling']

    Test names

    >>> n0 = getattr(folder.names, 'time-twister')
    >>> tps = n0.getFolderContents({'meta_type':['TemporalAttestation']})
    >>> len(tps)
    2
    >>> tps[0].Title
    'Attested: Classical (550 - 330 BC)'
    >>> tps[0].getId
    'classical'
    >>> tps[0].getAttestationConfidence
    'confident'
    
    >>> tps[1].Title
    'Attested: Hellenistic/Republican (330 - 30 BC)?'
    >>> tps[1].getId
    'hellenistic-republican'
    >>> tps[1].getAttestationConfidence
    'less-confident'
    
    >>> n1 = getattr(folder.names, 'tome-twirling')
    >>> tps = n1.getFolderContents({'meta_type':['TemporalAttestation']})
    >>> len(tps)
    2
    >>> tps[0].Title
    'Attested: Roman (30 BC - AD 300) - inferred'
    >>> tps[0].getId
    'roman'
    >>> tps[0].getAttestationConfidence
    'confident-inferred'
    
    >>> tps[1].Title
    'Attested: Late Antique (AD 300 - 625)? - inferred'
    >>> tps[1].getId
    'late-antique'
    >>> tps[1].getAttestationConfidence
    'less-confident-inferred'

    Test locations

    >>> lid = r['location_ids'][0]
    >>> l = getattr(folder.locations, lid)
    >>> tps = l.getFolderContents({'meta_type':['TemporalAttestation']})
    >>> len(tps)
    5
    >>> tps[0].Title
    'Attested: Archaic (pre-550 BC)'
    >>> tps[0].getId
    'archaic'
    >>> tps[0].getAttestationConfidence
    'confident'
    
    >>> tps[1].Title
    'Attested: Classical (550 - 330 BC)'
    >>> tps[1].getId
    'classical'
    >>> tps[1].getAttestationConfidence
    'confident'
    
    >>> tps[2].Title
    'Attested: Hellenistic/Republican (330 - 30 BC)?'
    >>> tps[2].getId
    'hellenistic-republican'
    >>> tps[2].getAttestationConfidence
    'less-confident'
    
    >>> tps[3].Title
    'Attested: Roman (30 BC - AD 300)'
    >>> tps[3].getId
    'roman'
    >>> tps[3].getAttestationConfidence
    'confident'
    
    >>> tps[4].Title
    'Attested: Late Antique (AD 300 - 625)?'
    >>> tps[4].getId
    'late-antique'
    >>> tps[4].getAttestationConfidence
    'less-confident'
    
