GeoRSS and KML views
====================

Test logical view of a collection of entities

Setup
-----

    >>> lpf = self.portal.portal_types['Large Plone Folder']
    >>> lpf_allow = lpf.global_allow
    >>> lpf.global_allow = True

    >>> n = self.portal.portal_types['GeographicName']
    >>> n_allow = n.global_allow
    >>> n.global_allow = True

    >>> folder = self.folder

    Containers

    >>> _ = folder.invokeFactory('Large Plone Folder', id='names')
    >>> _ = folder.invokeFactory('LocationContainer', id='locations')
    >>> _ = folder.invokeFactory('PlaceContainer', id='places')

    Entities

    >>> _ = folder.names.invokeFactory('GeographicName', id='neverpolis', title='Neverpolis')
    >>> lid = folder.locations.invokeFactory('Location')
    >>> pid = folder.places.invokeFactory('Place')

    Add References

    >>> n = folder.names.neverpolis
    >>> x = getattr(folder.locations, lid)
    >>> p = getattr(folder.places, pid)
    >>> _ = p.addReference(n, 'name_name')
    >>> _ = p.addReference(x, 'location_location')

    Set location coordinates and place attributes

    >>> x.setSpatialCoordinates('0.0 0.0 0.0')
    >>> p.setDescription('A testing entity')

Test browse
-----------

    Initialize the test browser

    >>> from Products.Five.testbrowser import Browser
    >>> browser = Browser()
    >>> browser.handleErrors = False

    Let us log all exceptions, which is useful for debugging. Also, clear
    portlet slots, to make the test browser less confused by things like the
    recent portlet and the navtree.

    >>> self.portal.error_log._ignored_exceptions = ()
    >>> self.portal.left_slots = self.portal.right_slots = []

    Check views of folder

    >>> url = folder.places.absolute_url()

    >>> browser.open("%s/@@geo/forRSS" % url)
    >>> browser.contents == """[{'srs': 'EPSG:4326', 'geometryType': 'point', 'description': 'A testing entity', 'spatialCoordinates': '0.0 0.0', 'url': 'http://nohost/plone/Members/test_user_1_/places/%(pid)s', 'geom_element': '<georss:point>0.0 0.0</georss:point>', 'title': 'Neverpolis', 'id': '%(pid)s'}]""" % {'pid': pid}
    True

    >>> browser.open("%s/@@geo/forKML" % url)
    >>> expected =  '[{\'srs\': \'EPSG:4326\', \'desc_body\': \'<![CDATA[<p>A testing entity</p><p><a href="http://nohost/plone/Members/test_user_1_/places/%(pid)s">Neverpolis</a></p>]]>\', \'geometryType\': \'point\', \'description\': \'A testing entity\', \'spatialCoordinates\': \'0.0 0.0 0.0\', \'url\': \'http://nohost/plone/Members/test_user_1_/places/%(pid)s\', \'geom_element\': \'<Point><coordinates>0.000000,0.000000,0.000000</coordinates></Point>\', \'title\': \'Neverpolis\', \'id\': \'%(pid)s\'}]' % {'pid': pid}
    >>> browser.contents == expected
    True

    Check views of single place

    >>> url = p.absolute_url()
    >>> browser.open("%s/@@geo/forRSS" % url)
    >>> browser.contents == "[{'srs': 'EPSG:4326', 'geometryType': 'point', 'description': 'A testing entity', 'spatialCoordinates': '0.0 0.0', 'url': 'http://nohost/plone/Members/test_user_1_/places/%(pid)s', 'geom_element': '<georss:point>0.0 0.0</georss:point>', 'title': 'Neverpolis', 'id': '%(pid)s'}]" % {'pid': pid}
    True

    >>> browser.open("%s/@@geo/forKML" % url)
    >>> expected =  '[{\'srs\': \'EPSG:4326\', \'desc_body\': \'<![CDATA[<p>A testing entity</p><p><a href="http://nohost/plone/Members/test_user_1_/places/%(pid)s">Neverpolis</a></p>]]>\', \'geometryType\': \'point\', \'description\': \'A testing entity\', \'spatialCoordinates\': \'0.0 0.0 0.0\', \'url\': \'http://nohost/plone/Members/test_user_1_/places/%(pid)s\', \'geom_element\': \'<Point><coordinates>0.000000,0.000000,0.000000</coordinates></Point>\', \'title\': \'Neverpolis\', \'id\': \'%(pid)s\'}]' % {'pid': pid}
    >>> browser.contents == expected
    True

