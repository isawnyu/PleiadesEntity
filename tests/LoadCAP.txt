Loading of Entities from New directory data format
==================================================

Setup

    >>> import transaction
    >>> self.setRoles(('Manager',))
    >>> folder = self.folder
    
Load one unlabeled place

    >>> TEST_DATA = self.test_params.TEST_DATA
    >>> from Products.PleiadesEntity.Extensions.loader import load_cap
    >>> from lxml import etree
    >>> doc = etree.parse('%s/map35-fixed.xml' % TEST_DATA)
    >>> x = doc.findall('{http://atlantides.org/batlas/}place')[0]
    >>> r = load_cap(folder, x, '35')
        
Test attributes of the place

    >>> pid = r['place_id']
    >>> p = folder['places'][pid]
    >>> p.Title()
    'Untitled'
    >>> p.getPlaceType()
    ['wall']
    >>> p.getFeatureType()
    ['wall']
    >>> p.getModernLocation()
    'clausuraNE Bezereos at Tebaga'
    >>> p.getText()
    '<p>None</p>'
    >>> p.Creators()
    ('D.J. Mattingly',)
    >>> p.Contributors()
    ('R. Talbert', 'T. Elliott', 'S. Gillies')
    >>> p.Description()
    'An ancient place, cited: BAtlas 35 B1 unnamed wall (NE Bezereos at Tebaga)'

Location

    >>> x = p.getLocations()[0]
    >>> x.Creators()
    ('D.J. Mattingly',)
    >>> x.Contributors()
    ('R. Talbert', 'T. Elliott', 'S. Gillies')
    >>> x.getAttestations()
    [{'timePeriod': 'roman', 'confidence': 'confident'}, {'timePeriod': 'late-antique', 'confidence': 'confident'}]
    >>> x.getLocation()
    'http://atlantides.org/capgrids/35/B1'
    
Georeferencing, location

    >>> from zgeo.geographer.interfaces import IGeoreferenced
    >>> geo = IGeoreferenced(x)
    >>> geo.type
    'Polygon'
    >>> geo.coordinates
    (((9.0, 33.0), (9.0, 34.0), (10.0, 34.0), (10.0, 33.0), (9.0, 33.0)),)

Georeferencing, place

    >>> gp = IGeoreferenced(p)
    >>> gp.type
    'Polygon'
    >>> gp.coordinates
    (((9.0, 33.0), (9.0, 34.0), (10.0, 34.0), (10.0, 33.0), (9.0, 33.0)),)

Next, test an entity with names

   >>> ns={'a': 'http://www.alexandria.ucsb.edu/gazetteer/ContentStandard/version3.2/', 'b': 'http://atlantides.org/batlas/'}
    >>> x = doc.xpath("//b:place[a:featureID='batlas-35-2-3']", namespaces=ns)[0]
    >>> r = load_cap(folder, x, '35')
    
Verify attributes

    >>> pid = r['place_id']
    >>> p = folder['places'][pid]
    >>> p.Title()
    'Abrotonum/Sabratha'
    >>> p.getPlaceType()
    ['labeled feature']
    >>> p.getModernLocation()
    'Sabrata, Zuaga'
    >>> p.getText()
    '<p>None</p>'
    >>> p.Creators()
    ('D.J. Mattingly',)
    >>> p.Contributors()
    ('R. Talbert', 'T. Elliott', 'S. Gillies')
    >>> p.Description()
    'An ancient place, cited: BAtlas 35 E2 Abrotonum/Sabratha'
    
    >>> [ref for ref in p.getReferenceCitations()]
    [{'range': 'BAtlas 35 E2 Abrotonum/Sabratha', 'identifier': ''}, {'range': 'Desanges1978,100-101', 'identifier': ''}, {'range': 'Mattingly1994,125-27', 'identifier': ''}]
    
Names

    >>> sorted(p.keys())
    ['abrotonum', 'sabratha', 'undetermined']
    >>> names = p.getNames()
    >>> n = names[0]
    >>> n.getNameTransliterated()
    'Abrotonum'
    >>> n.Title()
    'Abrotonum'
    >>> n.getNameLanguage()
    ''
    >>> n.getNameType()
    'geographic'
    >>> n.getAccuracy()
    'accurate'
    >>> n.getCompleteness()
    'complete'
    >>> p.Creators()
    ('D.J. Mattingly',)
    >>> p.Contributors()
    ('R. Talbert', 'T. Elliott', 'S. Gillies')

    >>> n.getAttestations()
    [{'timePeriod': 'classical', 'confidence': 'confident'}, {'timePeriod': 'hellenistic-republican', 'confidence': 'confident'}]
