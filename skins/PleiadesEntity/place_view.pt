<html xmlns="http://www.w3.org/1999/xhtml"
      xml:lang="en"
      lang="en"
      xmlns:tal="http://xml.zope.org/namespaces/tal"
      xmlns:metal="http://xml.zope.org/namespaces/metal"
      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
      i18n:domain="plone">
  
  <head>
    
    <metal:links_macro metal:define-macro="links"
      tal:define="url context/absolute_url"
      >
      <link rel="foaf:primaryTopic" tal:attributes="href string:${url}#this"/>
      <link rel="alternate" type="application/atom+xml" tal:attributes="href string:${url}/atom"/>
      <link rel="alternate" type="application/json" tal:attributes="href string:${url}/@@json?sm=1"/>
      <link rel="alternate" type="application/vnd.google-earth.kml+xml" tal:attributes="href string:${url}/kml"/>
    </metal:links_macro>
    
    <metal:js_macro metal:define-macro="js">
      <script type="text/javascript"
        src="http://maps.google.com/maps/api/js?sensor=false">
      </script>
      <script type="text/javascript">
  var MTID = 'aw';

  function getKML() {
    var documentNode = document;
    var linkNode = documentNode.evaluate(
                    '//link[@rel="alternate" and @type="application/vnd.google-earth.kml+xml"]',
                    documentNode,
                    null,
                    XPathResult.FIRST_ORDERED_NODE_TYPE,
                    null
                    ).singleNodeValue;
    var uri = linkNode.getAttribute("href");
    return uri;
  }

  function initialize() {
    var latlng = new google.maps.LatLng(0.0, 0.0);

    var myOptions = {
      zoom: 8,
      center: latlng,
      mapTypeId: google.maps.MapTypeId.TERRAIN
    };

    var map = new google.maps.Map(document.getElementById("map"),
        myOptions);

  var kmlLayer = new google.maps.KmlLayer(getKML());
  kmlLayer.setMap(map);
  }

  registerPloneFunction(initialize);
</script>
      
    </metal:js_macro>

  </head>
  
  <body>
    
    <metal:body_macro
      metal:define-macro="body"
      tal:define="field_macro field_macro | here/widgets/field/macros/view;
        kssClassesView context/@@kss_field_decorator_view;
        getKssClasses nocall:kssClassesView/getKssClassesInlineEditable;
        templateId template/getId;"
        >

        <p class="documentDescription">
            <metal:field use-macro="python:here.widget('description', mode='view')">
            Description
            </metal:field>
        </p>

      <div id="map" style="width:100%;height:300px;border:solid #ccc 1px;background-color:#cccccc;"></div>
      
      <br/>

        <!-- Names -->
        <div class="field">
          <label class="formQuestion"><span>Names</span>:</label>
          <ul tal:repeat="data context/@@attestations/names">
            <li tal:define="n python:data[0]; tps python:', '.join([a['timePeriod'].capitalize() for a in data[1]])"><a href="" tal:attributes="href n/getId" tal:content="n/title_or_id"></a> <span tal:condition="tps" tal:content="string:($tps)"></span></li>
          </ul>
        </div>

        <!-- Locations -->
        <div class="field">
          <label class="formQuestion"><span>Locations</span>:</label>
          <ul tal:repeat="data context/@@attestations/locations">
            <li tal:define="n python:data[0]; tps python:', '.join([a['timePeriod'].capitalize() for a in data[1]])"><a href="" tal:attributes="href n/getId" tal:content="n/title_or_id"></a> <span tal:condition="tps" tal:content="string:($tps)"></span></li>
          </ul>
        </div>
        
      <tal:repeat
        repeat="field python:here.Schema().filterFields(isMetadata=0)"
        >
        <tal:if_visible
          define="mode string:view; visState python:field.widget.isVisible(here, mode); visCondition python:field.widget.testCondition(here, portal, template);"
          condition="python:visState == 'visible' and visCondition">
          <metal:use_field use-macro="field_macro"/>
        </tal:if_visible>
      </tal:repeat>
                  
      <div class="field">
        <label class="formQuestion"><span>Alternate representations</span>:</label>
        <p tal:define="url context/absolute_url">
          <a type="application/atom+xml" tal:attributes="href string:${url}/atom">Atom</a>,
          <a type="application/json" tal:attributes="href string:${url}/json">JSON</a>,
          <a type="application/vnd.google-earth.kml+xml" tal:attributes="href string:${url}/kml">KML</a>
        </p>
      </div>

    </metal:body_macro>
    
    <metal:folderlisting_macro define-macro="folderlisting">
      <!-- nothing -->
    </metal:folderlisting_macro>

  </body>
</html>
