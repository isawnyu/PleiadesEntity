
    >>> folder = self.folder
        
    >>> import os
     >>> source_dir = os.path.sep.join([os.environ['SOFTWARE_HOME'], 'Products', 'GeographicEntityLite', 'tests', 'data', 'batlas-65-4-9.xml'])
    >>> from Products.GeographicEntityLite.Extensions.batching import load_entity        
    >>> load_entity(folder, source_dir)
    >>> enID = 'batlas-65-4-9'
    >>> en = getattr(folder, enID)
    >>> en.getIdentifier()
    'batlas-65-4-9'
    
    >>> finalTitle = en.Title()
     
    >>> soughtFinalTitle = u'Unnamed bridge, modern location: at Asarba\U0000015F\U00000131, over Eurymedon fl.'
    >>> soughtFinalTitle_utf8 = soughtFinalTitle.encode('utf8')
    >>> finalTitle == soughtFinalTitle_utf8
    True
    >>> finalTitle = en.Title()
    >>> finalTitle == soughtFinalTitle_utf8
    True

    
    >>> sourcetext = u'at Asarba\U0000015F\U00000131, over Eurymedon fl.'
    >>> sourcetext_utf8 = sourcetext.encode('utf8')
    >>> resulttext_utf8 = en.getModernLocation()
    >>> resulttext_utf8 == sourcetext_utf8
    True
    >>> resulttext = unicode(resulttext_utf8, 'utf8')
    >>> resulttext == sourcetext
    True
    >>> resulttext == u'at Asarba\U0000015F\U00000131, over Eurymedon fl.'
    True
    
    >>> sourcelist = ['Roman']
    >>> results = en.getTimePeriods()
    
    >>> results[0] == 'Roman'
    True
    
    >>> en.getGeoEntityType()
    'bridge'
    
    >>> sourcelist = [u'BAtlas 65 F3', u'IK 37, 18']
    >>> resultlist = en.getSecondaryReferences()
    
    >>> resultlist[0] == sourcelist[0].encode('utf8')
    True
    
    >>> resultlist[1] == sourcelist[1].encode('utf8')
    True
    
    >>> en.getSpatialCoordinates()
    '37.3724500000008 31.2163400000009 0.0'        
    >>> en.getSpatialGeometryType()
    'point'        
    
    >>> soughtDescription = u'An ancient bridge, attested during the Roman period (modern location: at Asarba\U0000015F\U00000131, over Eurymedon fl.). Its ancient name is not known.'
    >>> gotDescription = en.Description()
    >>> soughtDescription_utf8 = soughtDescription.encode('utf8')
    >>> soughtDescription_utf8 == gotDescription
    True
    