
    >>> folder = self.folder
        
    >>> enID = 'batlas-65-2-22'
    >>> folder.invokeFactory('GeographicEntityLite', id=enID)
    'batlas-65-2-22'
    >>> en = getattr(folder, enID)
    >>> en.setTitle(enID)
    >>> en.Title()
    'batlas-65-2-22'
    >>> en.setIdentifier(enID)
    >>> en.getIdentifier()
    'batlas-65-2-22'
    
    >>> sourcetext = u'Dinar'
    >>> sourcetext_utf8 = sourcetext.encode('utf8')
    >>> en.setModernLocation(sourcetext_utf8)
    >>> resulttext_utf8 = en.getModernLocation()
    >>> resulttext_utf8 == sourcetext_utf8
    True
    >>> resulttext = unicode(resulttext_utf8, 'utf8')
    >>> resulttext == sourcetext
    True
    >>> resulttext == u'Dinar'
    True
    
    >>> sourcelist = ['Classical', 'Hellenistic (Roman Republic)', 'Roman', 'Late Antique']
    >>> en.setTimePeriods(sourcelist)
    >>> results = en.getTimePeriods()
    
    >>> results[0] == 'Classical'
    True
    
    >>> results[1] == 'Hellenistic (Roman Republic)'
    True
    
    >>> results[2] == 'Roman'
    True
    
    >>> results[3] == 'Late Antique'
    True
    
    >>> en.setGeoEntityType('settlement')
    >>> en.getGeoEntityType()
    'settlement'
    
    >>> sourcelist = [u'BAtlas 65 D1 Apamea/Kelainai/Kibotos', u'RE 6', u'TIB Phrygien 188-89', u'Cohen 1995, 281-85', u'NPauly Kelainai']
    >>> en.setSecondaryReferences(sourcelist)
    >>> resultlist = en.getSecondaryReferences()
    
    >>> resultlist[0] == sourcelist[0].encode('utf8')
    True
    
    >>> resultlist[1] == sourcelist[1].encode('utf8')
    True
    
    >>> resultlist[2] == sourcelist[2].encode('utf8')
    True
    
    >>> resultlist[3] == sourcelist[3].encode('utf8')
    True
    
    >>> resultlist[4] == sourcelist[4].encode('utf8')
    True
    
    >>> en.setSpatialCoordinates('38.0709999999999 30.1660499999998 0.0')
    >>> en.getSpatialCoordinates()
    '38.0709999999999 30.1660499999998 0.0'        
    >>> en.setSpatialGeometryType('point')
    >>> en.getSpatialGeometryType()
    'point'        
    
    >>> nameID = 'batlas-65-2-22-n1'
    >>> en.invokeFactory('GeographicNameLite', id=nameID)
    'batlas-65-2-22-n1'
    >>> en_name = getattr(en, nameID)
    >>> en_name.setIdentifier('batlas-65-2-22-n1')
    >>> en_name.getIdentifier()
    'batlas-65-2-22-n1'
        
    >>> en_name.setTitle('Apamea')
    >>> en_name.Title()
    'Apamea'
    
    >>> en_name.setGeoNameType('geographic')
    >>> en_name.getGeoNameType()
    'geographic'
    
    >>> sourcelist = ['Hellenistic (Roman Republic)', 'Roman', 'Late Antique']
    >>> en.setTimePeriods(sourcelist)
    >>> results = en.getTimePeriods()
    
    >>> results[0] == 'Hellenistic (Roman Republic)'
    True
    
    >>> results[1] == 'Roman'
    True
    
    >>> results[2] == 'Late Antique'
    True
    
    >>> nameID = 'batlas-65-2-22-n2'
    >>> en.invokeFactory('GeographicNameLite', id=nameID)
    'batlas-65-2-22-n2'
    >>> en_name = getattr(en, nameID)
    >>> en_name.setIdentifier('batlas-65-2-22-n2')
    >>> en_name.getIdentifier()
    'batlas-65-2-22-n2'
        
    >>> en_name.setTitle('Kelainai')
    >>> en_name.Title()
    'Kelainai'
    
    >>> en_name.setGeoNameType('geographic')
    >>> en_name.getGeoNameType()
    'geographic'
    
    >>> sourcelist = ['Classical', 'Hellenistic (Roman Republic)', 'Roman', 'Late Antique']
    >>> en.setTimePeriods(sourcelist)
    >>> results = en.getTimePeriods()
    
    >>> results[0] == 'Classical'
    True
    
    >>> results[1] == 'Hellenistic (Roman Republic)'
    True
    
    >>> results[2] == 'Roman'
    True
    
    >>> results[3] == 'Late Antique'
    True
    
    >>> nameID = 'batlas-65-2-22-n3'
    >>> en.invokeFactory('GeographicNameLite', id=nameID)
    'batlas-65-2-22-n3'
    >>> en_name = getattr(en, nameID)
    >>> en_name.setIdentifier('batlas-65-2-22-n3')
    >>> en_name.getIdentifier()
    'batlas-65-2-22-n3'
        
    >>> en_name.setTitle('Kibotos')
    >>> en_name.Title()
    'Kibotos'
    
    >>> en_name.setGeoNameType('geographic')
    >>> en_name.getGeoNameType()
    'geographic'
    
    >>> sourcelist = ['Roman']
    >>> en.setTimePeriods(sourcelist)
    >>> results = en.getTimePeriods()
    
    >>> results[0] == 'Roman'
    True
    
    >>> from Products.GeographicEntityLite.Extensions.cooking import setGeoTitleFromNames
    >>> finalTitle = setGeoTitleFromNames(en)
     
    >>> soughtFinalTitle = u'Apamea/Kelainai/Kibotos'
    >>> soughtFinalTitle_utf8 = soughtFinalTitle.encode('utf8')
    >>> finalTitle == soughtFinalTitle_utf8
    True
    >>> finalTitle = en.Title()
    >>> finalTitle == soughtFinalTitle_utf8
    True
    >>> soughtDescription = u'An ancient settlement, attested during the Classical, Hellenistic (Roman Republic), Roman and Late Antique periods (modern location: Dinar). It was known in antiquity by the names: Apamea, Kelainai and Kibotos.'
    >>> en.setDescription(soughtDescription)
    >>> gotDescription = en.Description()
    >>> soughtDescription_utf8 = soughtDescription.encode('utf8')
    >>> soughtDescription_utf8 == gotDescription
    True
    
    