
    >>> folder = self.folder
        
    >>> enID = 'batlas-65-2-20'
    >>> folder.invokeFactory('GeographicEntityLite', id=enID)
    'batlas-65-2-20'
    >>> en = getattr(folder, enID)
    >>> en.setTitle(enID)
    >>> en.Title()
    'batlas-65-2-20'
    >>> en.setIdentifier(enID)
    >>> en.getIdentifier()
    'batlas-65-2-20'
    
    >>> sourcetext = u'Ka\U0000015F'
    >>> sourcetext_utf8 = sourcetext.encode('utf8')
    >>> en.setModernLocation(sourcetext_utf8)
    >>> resulttext_utf8 = en.getModernLocation()
    >>> resulttext_utf8 == sourcetext_utf8
    True
    >>> resulttext = unicode(resulttext_utf8, 'utf8')
    >>> resulttext == sourcetext
    True
    >>> resulttext == u'Ka\U0000015F'
    True
    
    >>> sourcelist = ['Classical', 'Hellenistic (Roman Republic)', 'Roman', 'Late Antique']
    >>> en.setTimePeriods(sourcelist)
    >>> results = en.getTimePeriods()
    
    >>> results[0] == 'Classical'
    True
    
    >>> results[1] == 'Hellenistic (Roman Republic)'
    True
    
    >>> results[2] == 'Roman'
    True
    
    >>> results[3] == 'Late Antique'
    True
    
    >>> en.setGeoEntityType('settlement')
    >>> en.getGeoEntityType()
    'settlement'
    >>> sourcelist = [u'BAtlas 65 C5 Antiphellos/Habesos', u'NPauly']
    >>> en.setSecondaryReferences(sourcelist)
    >>> resultlist = en.getSecondaryReferences()
    
    >>> resultlist[0] == sourcelist[0].encode('utf8')
    True
    
    >>> resultlist[1] == sourcelist[1].encode('utf8')
    True
    
    >>> en.setSpatialCoordinates('36.1931800000002 29.6370399999996 0.0')
    >>> en.getSpatialCoordinates()
    '36.1931800000002 29.6370399999996 0.0'        
    >>> en.setSpatialGeometryType('point')
    >>> en.getSpatialGeometryType()
    'point'        
    
    >>> nameID = 'batlas-65-2-20-n1'
    >>> en.invokeFactory('GeographicNameLite', id=nameID)
    'batlas-65-2-20-n1'
    >>> en_name = getattr(en, nameID)
    >>> en_name.setIdentifier('batlas-65-2-20-n1')
    >>> en_name.getIdentifier()
    'batlas-65-2-20-n1'
        
    >>> en_name.setTitle('Antiphellos')
    >>> en_name.Title()
    'Antiphellos'
    
    >>> sourcelist = ['Hellenistic (Roman Republic)', 'Roman', 'Late Antique']
    >>> en.setTimePeriods(sourcelist)
    >>> results = en.getTimePeriods()
    
    >>> results[0] == 'Hellenistic (Roman Republic)'
    True
    
    >>> results[1] == 'Roman'
    True
    
    >>> results[2] == 'Late Antique'
    True
    
    >>> nameID = 'batlas-65-2-20-n2'
    >>> en.invokeFactory('GeographicNameLite', id=nameID)
    'batlas-65-2-20-n2'
    >>> en_name = getattr(en, nameID)
    >>> en_name.setIdentifier('batlas-65-2-20-n2')
    >>> en_name.getIdentifier()
    'batlas-65-2-20-n2'
        
    >>> en_name.setTitle('Habesos')
    >>> en_name.Title()
    'Habesos'
    
    >>> sourcelist = ['Classical']
    >>> en.setTimePeriods(sourcelist)
    >>> results = en.getTimePeriods()
    
    >>> results[0] == 'Classical'
    True
    