
    >>> folder = self.folder
        
    
    >>> enID = 'batlas-65-2-12'
    >>> folder.invokeFactory('GeographicEntityLite', id=enID)
    'batlas-65-2-12'
    >>> en = getattr(folder, enID)
    >>> en.setTitle(enID)
    >>> en.Title()
    'batlas-65-2-12'
    >>> en.setIdentifier(enID)
    >>> en.getIdentifier()
    'batlas-65-2-12'
    
    
    >>> en.setModernLocation(u'Hisartepe, near K\x131z\x131lca')
    >>> en.getModernLocation()
    'Hisartepe, near K\x131z\x131lca'
    
    
    >>> en.setTimePeriods(['Hellenistic (Roman Republic)', 'Roman', 'Late Antique'])
    >>> en.getTimePeriods()
    ('Hellenistic (Roman Republic)', 'Roman', 'Late Antique')
        
    
    
    
    >>> en.setGeoEntityType('settlement')
    >>> en.getGeoEntityType()
    'settlement'
    
    
        
    >>> en.setSecondaryReferences(['BAtlas 65 G2 Amblada', 'von Aulock1977,22-23', 'TIB Galatien 122'])
    >>> en.getSecondaryReferences()
    ('BAtlas 65 G2 Amblada', 'von Aulock1977,22-23', 'TIB Galatien 122')
        
        
        
    
    
        
    >>> en.setSpatialCoordinates('37.5254199999999 31.7393100000008 0.0')
    >>> en.getSpatialCoordinates()
    '37.5254199999999 31.7393100000008 0.0'        
    >>> en.setSpatialGeometryType('point')
    >>> en.getSpatialGeometryType()
    'point'        
    
    
    
    >>> nameID = 'batlas-65-2-12-n1'
    >>> en.invokeFactory('GeographicNameLite', id=nameID)
    'batlas-65-2-12-n1'
    >>> en_name = getattr(en, nameID)
    >>> en_name.setIdentifier('batlas-65-2-12-n1')
    >>> en_name.getIdentifier()
    'batlas-65-2-12-n1'
        
        
    >>> en_name.setTitle('Amblada')
    >>> en_name.Title()
    'Amblada'
    
        
    >>> test_msg = 'There is an xml element in the test data that was not handled by the maketest.xsl transformation. Element name = classificationSection'
    >>> print test_msg
    ''
    
    
