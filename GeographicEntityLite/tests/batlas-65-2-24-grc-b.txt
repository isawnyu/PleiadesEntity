
    >>> folder = self.folder
        
    >>> import os
     >>> source_dir = os.path.sep.join([os.environ['SOFTWARE_HOME'], 'Products', 'GeographicEntityLite', 'tests', 'data', 'batlas-65-2-24-grc.xml'])
    >>> from Products.GeographicEntityLite.Extensions.batching import load_entity        
    >>> load_entity(folder, source_dir)
    >>> enID = 'batlas-65-2-24-grc'
    >>> en = getattr(folder, enID)
    >>> en.getIdentifier()
    'batlas-65-2-24-grc'
    
    >>> finalTitle = en.Title()
     
    >>> soughtFinalTitle = u'Aphrodisias/Ninoe'
    >>> soughtFinalTitle_utf8 = soughtFinalTitle.encode('utf8')
    >>> finalTitle == soughtFinalTitle_utf8
    True
    >>> finalTitle = en.Title()
    >>> finalTitle == soughtFinalTitle_utf8
    True

    
    >>> sourcetext = u'Geyre'
    >>> sourcetext_utf8 = sourcetext.encode('utf8')
    >>> resulttext_utf8 = en.getModernLocation()
    >>> resulttext_utf8 == sourcetext_utf8
    True
    >>> resulttext = unicode(resulttext_utf8, 'utf8')
    >>> resulttext == sourcetext
    True
    >>> resulttext == u'Geyre'
    True
    
    >>> sourcelist = ['Classical', 'Roman', 'Late Antique']
    >>> results = en.getTimePeriods()
    
    >>> results[0] == 'Classical'
    True
    
    >>> results[1] == 'Roman'
    True
    
    >>> results[2] == 'Late Antique'
    True
    
    >>> en.getGeoEntityType()
    'settlement'
    
    >>> sourcelist = [u'BAtlas 65 A2 Aphrodisias/Ninoe', u'RE 2', u'NPauly 1', u'RE']
    >>> resultlist = en.getSecondaryReferences()
    
    >>> resultlist[0] == sourcelist[0].encode('utf8')
    True
    
    >>> resultlist[1] == sourcelist[1].encode('utf8')
    True
    
    >>> resultlist[2] == sourcelist[2].encode('utf8')
    True
    
    >>> resultlist[3] == sourcelist[3].encode('utf8')
    True
    
    >>> en.getSpatialCoordinates()
    '37.7144599999992 28.7288599999993 0.0'        
    >>> en.getSpatialGeometryType()
    'point'        
    
    >>> nameID = 'batlas-65-2-24-grc-n1'
    >>> en_name = getattr(en, nameID)
    >>> en_name.getIdentifier()
    'batlas-65-2-24-grc-n1'
        
    >>> sourcetext = u'\U00001F08\U000003C6\U000003C1\U000003BF\U000003B4\U000003B9\U000003C3\U000003B9\U00001F71\U000003C2'
    >>> sourcetext_utf8 = sourcetext.encode('utf8')
    >>> resulttext_utf8 = en_name.getNameAttested()
    >>> resulttext_utf8 == sourcetext_utf8
    True
    >>> resulttext = unicode(resulttext_utf8, 'utf8')
    >>> resulttext == sourcetext
    True
    >>> resulttext == u'\U00001F08\U000003C6\U000003C1\U000003BF\U000003B4\U000003B9\U000003C3\U000003B9\U00001F71\U000003C2'
    True
        
        
    >>> en_name.getNameLanguage()
    'Ancient Greek'
    >>> en_name.Title()
    'Aphrodisias'
    
    >>> en_name.getGeoNameType()
    'geographic'
    
    >>> sourcelist = ['Roman', 'Late Antique']
    >>> results = en_name.getTimePeriods()
    
    >>> results[0] == 'Roman'
    True
    
    >>> results[1] == 'Late Antique'
    True
    
    >>> sourcelist = [u'RE 2', u'NPauly 1']
    >>> resultlist = en_name.getSecondaryReferences()
    
    >>> resultlist[0] == sourcelist[0].encode('utf8')
    True
    
    >>> resultlist[1] == sourcelist[1].encode('utf8')
    True
    
    >>> nameID = 'batlas-65-2-24-grc-n2'
    >>> en_name = getattr(en, nameID)
    >>> en_name.getIdentifier()
    'batlas-65-2-24-grc-n2'
        
    >>> sourcetext = u'\U0000039D\U000003B9\U000003BD\U00001F79\U000003B7'
    >>> sourcetext_utf8 = sourcetext.encode('utf8')
    >>> resulttext_utf8 = en_name.getNameAttested()
    >>> resulttext_utf8 == sourcetext_utf8
    True
    >>> resulttext = unicode(resulttext_utf8, 'utf8')
    >>> resulttext == sourcetext
    True
    >>> resulttext == u'\U0000039D\U000003B9\U000003BD\U00001F79\U000003B7'
    True
        
        
    >>> en_name.getNameLanguage()
    'Ancient Greek'
    >>> en_name.Title()
    'Ninoe'
    
    >>> en_name.getGeoNameType()
    'geographic'
    
    >>> sourcelist = ['Classical']
    >>> results = en_name.getTimePeriods()
    
    >>> results[0] == 'Classical'
    True
    
    >>> sourcelist = [u'RE']
    >>> resultlist = en_name.getSecondaryReferences()
    
    >>> resultlist[0] == sourcelist[0].encode('utf8')
    True
    
    >>> nameID = 'batlas-65-2-24-grc-n3'
    >>> en_name = getattr(en, nameID)
    >>> en_name.getIdentifier()
    'batlas-65-2-24-grc-n3'
        
    >>> sourcetext = u'\U00001F08\U000003C6\U000003C1\U000003BF\U000003B4\U000003B9\U000003C3\U000003B9\U000003B5\U00001F7B\U000003C2'
    >>> sourcetext_utf8 = sourcetext.encode('utf8')
    >>> resulttext_utf8 = en_name.getNameAttested()
    >>> resulttext_utf8 == sourcetext_utf8
    True
    >>> resulttext = unicode(resulttext_utf8, 'utf8')
    >>> resulttext == sourcetext
    True
    >>> resulttext == u'\U00001F08\U000003C6\U000003C1\U000003BF\U000003B4\U000003B9\U000003C3\U000003B9\U000003B5\U00001F7B\U000003C2'
    True
        
        
    >>> en_name.getNameLanguage()
    'Ancient Greek'
    >>> en_name.Title()
    'Aphrodisieus'
    
    >>> en_name.getGeoNameType()
    'ethnic'
    
    >>> sourcelist = ['Roman', 'Late Antique']
    >>> results = en_name.getTimePeriods()
    
    >>> results[0] == 'Roman'
    True
    
    >>> results[1] == 'Late Antique'
    True
    
    >>> nameID = 'batlas-65-2-24-grc-n4'
    >>> en_name = getattr(en, nameID)
    >>> en_name.getIdentifier()
    'batlas-65-2-24-grc-n4'
        
    >>> sourcetext = u'Aphrodisiensis'
    >>> sourcetext_utf8 = sourcetext.encode('utf8')
    >>> resulttext_utf8 = en_name.getNameAttested()
    >>> resulttext_utf8 == sourcetext_utf8
    True
    >>> resulttext = unicode(resulttext_utf8, 'utf8')
    >>> resulttext == sourcetext
    True
    >>> resulttext == u'Aphrodisiensis'
    True
        
        
    >>> en_name.getNameLanguage()
    'Latin'
    >>> en_name.Title()
    'Aphrodisiensis'
    
    >>> en_name.getGeoNameType()
    'ethnic'
    
    >>> sourcelist = ['Classical']
    >>> results = en_name.getTimePeriods()
    
    >>> results[0] == 'Classical'
    True
    